package admob

type AdNetwork string

const (
	AdColony                = "15586990674969969776"
	AdMob                   = "5450213213286189855"
	Applovin                = "1063618907739174004"
	Chartboost              = "2873236629771172317"
	FacebookAudienceNetwork = "10568273599589928883"
	Fuse                    = "8914788932458531264"
	Fyber                   = "4839637394546996422"
	InMobi                  = "7681903010231960328"
	Maio                    = "7505118203095108657"
	MyTarget                = "8450873672465271579"
	Nend                    = "9383070032774777750"
	Tapjoy                  = "7295217276740746030"
	UnityAds                = "4970775877303683148"
	Vungle                  = "1953547073528090325"
)

type SSVCallback struct {
	AdNetwork     AdNetwork `json:"ad_network"`
	AdUnit        int       `json:"ad_unit"`               //adMob ad unit id that was used to request the rewarded ad.
	CustomData    string    `json:"custom_data,omitempty"` //Custom data string as provided by setCustomData. If no custom data string is provided by the app, this query parameter value will not be present in the SSV callback.
	RewardAmount  int       `json:"reward_amount"`         //Reward amount as specified in the ad unit settings.
	RewardItem    string    `json:"reward_item"`           //Reward item as specified in the ad unit settings.
	Timestamp     int64     `json:"timestamp"`             //Timestamp of when the user was rewarded as Epoch time in ms.
	TransactionID string    `json:"transaction_id"`        //Unique hex encoded identifier for each reward grant event generated by AdMob.
	UserID        string    `json:"user_id,omitempty"`     //User identifier as provided by setUserId. If no user identifier is provided by the app, this query parameter will not be present in the SSV callback.
	Signature     string    `json:"signature"`             //Signature for SSV callback generated by AdMob.
	KeyID         int64     `json:"key_id"`                //Path to be used to verify SSV callback. This value maps to a public key provided by the AdMob key server.
}
